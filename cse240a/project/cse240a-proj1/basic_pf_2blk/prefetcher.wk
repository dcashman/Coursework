/*
 *
 * File: prefetcher.C
 * Author: Sat Garcia (sat@cs)
 * Description: This simple prefetcher waits until there is a D-cache miss then 
 * requests location (addr + 16), where addr is the address that just missed 
 * in the cache.
 *
 */

#include "prefetcher.h"
#include <stdio.h>




Prefetcher::Prefetcher() { _ready = false; }

bool Prefetcher::hasRequest(u_int32_t cycle) { return _ready; }

Request Prefetcher::getRequest(u_int32_t cycle) { 
  printf("PRE: addr fetched %x on %d num prefetch\n", _nextReq.addr, _req_left);
  return _nextReq; }

void Prefetcher::completeRequest(u_int32_t cycle) { 
  if(_req_left == 0){
    _ready = false; 
  }else{
    _req_left--;
    _nextReq.addr = _nextReq.addr + L2_BLOCK_SIZE;
  }
  
}

void Prefetcher::cpuRequest(Request req) { 
	if(!_ready && !req.HitL1) {
		_nextReq.addr = req.addr + L2_BLOCK_SIZE;
		_ready = true;
		_req_left = 1;
	}
}
